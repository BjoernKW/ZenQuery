<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="databaseDriverProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:databaseDriver.properties</value>
                <value>classpath:queries.properties</value>
            </list>
        </property>
    </bean>

    <bean id="databasePropertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
                <value>file:${configFile}</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <bean id="licenseProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:license.properties</value>
            </list>
        </property>
    </bean>

    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="${DATABASE_URL}"/>
    </bean>

    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="#{ @databaseDriverProperties.getProperty('drivers.' + @dbUrl.getScheme()) }"/>
        <property name="url" value="#{ @databaseDriverProperties.getProperty('protocols.' + @dbUrl.getScheme()) + @dbUrl.getHost() + (@dbUrl.getPort() != -1 ? ':' + @dbUrl.getPort() : '') + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
    </bean>

    <bean id="databaseConnectionDAO" class="com.zenquery.model.dao.impl.JdbcDatabaseConnectionDAO">
        <property name="databaseDriverProperties" ref="databaseDriverProperties" />
        <property name="dataSource" ref="dataSource" />
        <property name="queryDAO" ref="queryDAO" />
        <property name="dataSourceFactory" ref="dataSourceFactory" />
    </bean>

    <bean id="queryDAO" class="com.zenquery.model.dao.impl.JdbcQueryDAO">
        <property name="dbUrl" ref="dbUrl" />
        <property name="databaseDriverProperties" ref="databaseDriverProperties" />
        <property name="dataSource" ref="dataSource" />
        <property name="queryVersionDAO" ref="queryVersionDAO" />
    </bean>

    <bean id="queryVersionDAO" class="com.zenquery.model.dao.impl.JdbcQueryVersionDAO">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean class="com.zenquery.util.BasicDataSourceFactory" id="dataSourceFactory">
        <property name="databaseDriverProperties" ref="databaseDriverProperties" />
    </bean>

    <bean class="com.zenquery.util.LicenseUtil" id="licenseUtil" init-method="initialize">
        <property name="licenseProperties" ref="licenseProperties" />
        <property name="licenseFile" value="classpath:#{ @licenseProperties.getProperty('zenQuery.licenseFile') }"/>
        <property name="publicKeyFile" value="classpath:#{ @licenseProperties.getProperty('zenQuery.publicKeyFile') }"/>
    </bean>
</beans>
